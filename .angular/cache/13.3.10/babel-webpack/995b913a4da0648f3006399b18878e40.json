{"ast":null,"code":"import _asyncToGenerator from \"/Users/aiyushdhar/projects/Chat Notes/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { r as registerInstance, e as createEvent, c as writeTask, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\nimport { b as getIonMode, c as config } from './ionic-global-63a97a32.js';\nimport { a as attachComponent, d as detachComponent } from './framework-delegate-94e770cc.js';\nimport { B as BACKDROP, e as prepareOverlay, d as present, h as activeAnimations, f as dismiss, g as eventMethod } from './overlays-a62f858b.js';\nimport { g as getClassMap } from './theme-ff3fc52f.js';\nimport { e as deepReady } from './index-a7711c1e.js';\nimport { c as createAnimation } from './animation-822d986b.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\nimport { createGesture } from './index-34cb2743.js';\nimport { k as clamp } from './helpers-1457892a.js';\nimport './hardware-back-button-4a6b37fb.js';\nimport './gesture-controller-31cb6bb9.js'; // Defaults for the card swipe animation\n\nconst SwipeToCloseDefaults = {\n  MIN_PRESENTING_SCALE: 0.93\n};\n\nconst createSwipeToCloseGesture = (el, animation, onDismiss) => {\n  const height = el.offsetHeight;\n  let isOpen = false;\n\n  const canStart = detail => {\n    const target = detail.event.target;\n\n    if (target === null || !target.closest) {\n      return true;\n    }\n\n    const contentOrFooter = target.closest('ion-content, ion-footer');\n\n    if (contentOrFooter === null) {\n      return true;\n    } // Target is in the content or the footer so do not start the gesture.\n    // We could be more nuanced here and allow it for content that\n    // does not need to scroll.\n\n\n    return false;\n  };\n\n  const onStart = () => {\n    animation.progressStart(true, isOpen ? 1 : 0);\n  };\n\n  const onMove = detail => {\n    const step = clamp(0.0001, detail.deltaY / height, 0.9999);\n    animation.progressStep(step);\n  };\n\n  const onEnd = detail => {\n    const velocity = detail.velocityY;\n    const step = clamp(0.0001, detail.deltaY / height, 0.9999);\n    const threshold = (detail.deltaY + velocity * 1000) / height;\n    const shouldComplete = threshold >= 0.5;\n    let newStepValue = shouldComplete ? -0.001 : 0.001;\n\n    if (!shouldComplete) {\n      animation.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n      newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], step)[0];\n    } else {\n      animation.easing('cubic-bezier(0.32, 0.72, 0, 1)');\n      newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], step)[0];\n    }\n\n    const duration = shouldComplete ? computeDuration(step * height, velocity) : computeDuration((1 - step) * height, velocity);\n    isOpen = shouldComplete;\n    gesture.enable(false);\n    animation.onFinish(() => {\n      if (!shouldComplete) {\n        gesture.enable(true);\n      }\n    }).progressEnd(shouldComplete ? 1 : 0, newStepValue, duration);\n\n    if (shouldComplete) {\n      onDismiss();\n    }\n  };\n\n  const gesture = createGesture({\n    el,\n    gestureName: 'modalSwipeToClose',\n    gesturePriority: 40,\n    direction: 'y',\n    threshold: 10,\n    canStart,\n    onStart,\n    onMove,\n    onEnd\n  });\n  return gesture;\n};\n\nconst computeDuration = (remaining, velocity) => {\n  return clamp(400, remaining / Math.abs(velocity * 1.1), 500);\n};\n/**\n * iOS Modal Enter Animation for the Card presentation style\n */\n\n\nconst iosEnterAnimation = (baseEl, presentingEl) => {\n  const backdropAnimation = createAnimation().addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 0.01, 'var(--backdrop-opacity)').beforeStyles({\n    'pointer-events': 'none'\n  }).afterClearStyles(['pointer-events']);\n  const wrapperAnimation = createAnimation().addElement(baseEl.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({\n    'opacity': 1\n  }).fromTo('transform', 'translateY(100vh)', 'translateY(0vh)');\n  const baseAnimation = createAnimation().addElement(baseEl).easing('cubic-bezier(0.32,0.72,0,1)').duration(500).addAnimation(wrapperAnimation);\n\n  if (presentingEl) {\n    const isMobile = window.innerWidth < 768;\n    const hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n    const presentingAnimation = createAnimation().beforeStyles({\n      'transform': 'translateY(0)',\n      'transform-origin': 'top center',\n      'overflow': 'hidden'\n    });\n    const bodyEl = document.body;\n\n    if (isMobile) {\n      /**\n       * Fallback for browsers that does not support `max()` (ex: Firefox)\n       * No need to worry about statusbar padding since engines like Gecko\n       * are not used as the engine for standlone Cordova/Capacitor apps\n       */\n      const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n      const modalTransform = hasCardModal ? '-10px' : transformOffset;\n      const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n      const finalTransform = `translateY(${modalTransform}) scale(${toPresentingScale})`;\n      presentingAnimation.afterStyles({\n        'transform': finalTransform\n      }).beforeAddWrite(() => bodyEl.style.setProperty('background-color', 'black')).addElement(presentingEl).keyframes([{\n        offset: 0,\n        filter: 'contrast(1)',\n        transform: 'translateY(0px) scale(1)',\n        borderRadius: '0px'\n      }, {\n        offset: 1,\n        filter: 'contrast(0.85)',\n        transform: finalTransform,\n        borderRadius: '10px 10px 0 0'\n      }]);\n      baseAnimation.addAnimation(presentingAnimation);\n    } else {\n      baseAnimation.addAnimation(backdropAnimation);\n\n      if (!hasCardModal) {\n        wrapperAnimation.fromTo('opacity', '0', '1');\n      } else {\n        const toPresentingScale = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;\n        const finalTransform = `translateY(-10px) scale(${toPresentingScale})`;\n        presentingAnimation.afterStyles({\n          'transform': finalTransform\n        }).addElement(presentingEl.querySelector('.modal-wrapper')).keyframes([{\n          offset: 0,\n          filter: 'contrast(1)',\n          transform: 'translateY(0) scale(1)'\n        }, {\n          offset: 1,\n          filter: 'contrast(0.85)',\n          transform: finalTransform\n        }]);\n        const shadowAnimation = createAnimation().afterStyles({\n          'transform': finalTransform\n        }).addElement(presentingEl.querySelector('.modal-shadow')).keyframes([{\n          offset: 0,\n          opacity: '1',\n          transform: 'translateY(0) scale(1)'\n        }, {\n          offset: 1,\n          opacity: '0',\n          transform: finalTransform\n        }]);\n        baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n      }\n    }\n  } else {\n    baseAnimation.addAnimation(backdropAnimation);\n  }\n\n  return baseAnimation;\n};\n/**\n * iOS Modal Leave Animation\n */\n\n\nconst iosLeaveAnimation = (baseEl, presentingEl, duration = 500) => {\n  const backdropAnimation = createAnimation().addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0.0);\n  const wrapperAnimation = createAnimation().addElement(baseEl.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({\n    'opacity': 1\n  }).fromTo('transform', 'translateY(0vh)', 'translateY(100vh)');\n  const baseAnimation = createAnimation().addElement(baseEl).easing('cubic-bezier(0.32,0.72,0,1)').duration(duration).addAnimation(wrapperAnimation);\n\n  if (presentingEl) {\n    const isMobile = window.innerWidth < 768;\n    const hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n    const presentingAnimation = createAnimation().beforeClearStyles(['transform']).afterClearStyles(['transform']).onFinish(currentStep => {\n      // only reset background color if this is the last card-style modal\n      if (currentStep !== 1) {\n        return;\n      }\n\n      presentingEl.style.setProperty('overflow', '');\n      const numModals = Array.from(bodyEl.querySelectorAll('ion-modal')).filter(m => m.presentingElement !== undefined).length;\n\n      if (numModals <= 1) {\n        bodyEl.style.setProperty('background-color', '');\n      }\n    });\n    const bodyEl = document.body;\n\n    if (isMobile) {\n      const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n      const modalTransform = hasCardModal ? '-10px' : transformOffset;\n      const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n      const finalTransform = `translateY(${modalTransform}) scale(${toPresentingScale})`;\n      presentingAnimation.addElement(presentingEl).keyframes([{\n        offset: 0,\n        filter: 'contrast(0.85)',\n        transform: finalTransform,\n        borderRadius: '10px 10px 0 0'\n      }, {\n        offset: 1,\n        filter: 'contrast(1)',\n        transform: 'translateY(0px) scale(1)',\n        borderRadius: '0px'\n      }]);\n      baseAnimation.addAnimation(presentingAnimation);\n    } else {\n      baseAnimation.addAnimation(backdropAnimation);\n\n      if (!hasCardModal) {\n        wrapperAnimation.fromTo('opacity', '1', '0');\n      } else {\n        const toPresentingScale = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;\n        const finalTransform = `translateY(-10px) scale(${toPresentingScale})`;\n        presentingAnimation.addElement(presentingEl.querySelector('.modal-wrapper')).afterStyles({\n          'transform': 'translate3d(0, 0, 0)'\n        }).keyframes([{\n          offset: 0,\n          filter: 'contrast(0.85)',\n          transform: finalTransform\n        }, {\n          offset: 1,\n          filter: 'contrast(1)',\n          transform: 'translateY(0) scale(1)'\n        }]);\n        const shadowAnimation = createAnimation().addElement(presentingEl.querySelector('.modal-shadow')).afterStyles({\n          'transform': 'translateY(0) scale(1)'\n        }).keyframes([{\n          offset: 0,\n          opacity: '0',\n          transform: finalTransform\n        }, {\n          offset: 1,\n          opacity: '1',\n          transform: 'translateY(0) scale(1)'\n        }]);\n        baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n      }\n    }\n  } else {\n    baseAnimation.addAnimation(backdropAnimation);\n  }\n\n  return baseAnimation;\n};\n/**\n * Md Modal Enter Animation\n */\n\n\nconst mdEnterAnimation = baseEl => {\n  const baseAnimation = createAnimation();\n  const backdropAnimation = createAnimation();\n  const wrapperAnimation = createAnimation();\n  backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 0.01, 'var(--backdrop-opacity)').beforeStyles({\n    'pointer-events': 'none'\n  }).afterClearStyles(['pointer-events']);\n  wrapperAnimation.addElement(baseEl.querySelector('.modal-wrapper')).keyframes([{\n    offset: 0,\n    opacity: 0.01,\n    transform: 'translateY(40px)'\n  }, {\n    offset: 1,\n    opacity: 1,\n    transform: 'translateY(0px)'\n  }]);\n  return baseAnimation.addElement(baseEl).easing('cubic-bezier(0.36,0.66,0.04,1)').duration(280).addAnimation([backdropAnimation, wrapperAnimation]);\n};\n/**\n * Md Modal Leave Animation\n */\n\n\nconst mdLeaveAnimation = baseEl => {\n  const baseAnimation = createAnimation();\n  const backdropAnimation = createAnimation();\n  const wrapperAnimation = createAnimation();\n  const wrapperEl = baseEl.querySelector('.modal-wrapper');\n  backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0.0);\n  wrapperAnimation.addElement(wrapperEl).keyframes([{\n    offset: 0,\n    opacity: 0.99,\n    transform: 'translateY(0px)'\n  }, {\n    offset: 1,\n    opacity: 0,\n    transform: 'translateY(40px)'\n  }]);\n  return baseAnimation.addElement(baseEl).easing('cubic-bezier(0.47,0,0.745,0.715)').duration(200).addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\nconst modalIosCss = \".sc-ion-modal-ios-h{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;contain:strict}.overlay-hidden.sc-ion-modal-ios-h{display:none}.modal-wrapper.sc-ion-modal-ios,.modal-shadow.sc-ion-modal-ios{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow.sc-ion-modal-ios{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){.sc-ion-modal-ios-h{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){.sc-ion-modal-ios-h{--width:600px;--height:600px}}.sc-ion-modal-ios-h:first-of-type{--backdrop-opacity:var(--ion-backdrop-opacity, 0.4)}@media only screen and (min-width: 768px) and (min-height: 600px){.sc-ion-modal-ios-h{--border-radius:10px}}.modal-wrapper.sc-ion-modal-ios{-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0)}@media screen and (max-width: 767px){@supports (width: max(0px, 1px)){.modal-card.sc-ion-modal-ios-h{--height:calc(100% - max(30px, var(--ion-safe-area-top)) - 10px)}}@supports not (width: max(0px, 1px)){.modal-card.sc-ion-modal-ios-h{--height:calc(100% - 40px)}}.modal-card.sc-ion-modal-ios-h .modal-wrapper.sc-ion-modal-ios{border-top-left-radius:10px;border-top-right-radius:10px;border-bottom-right-radius:0;border-bottom-left-radius:0}[dir=rtl].sc-ion-modal-ios-h -no-combinator.modal-card.sc-ion-modal-ios-h .modal-wrapper.sc-ion-modal-ios,[dir=rtl] .sc-ion-modal-ios-h -no-combinator.modal-card.sc-ion-modal-ios-h .modal-wrapper.sc-ion-modal-ios,[dir=rtl].modal-card.sc-ion-modal-ios-h .modal-wrapper.sc-ion-modal-ios,[dir=rtl] .modal-card.sc-ion-modal-ios-h .modal-wrapper.sc-ion-modal-ios{border-top-left-radius:10px;border-top-right-radius:10px;border-bottom-right-radius:0;border-bottom-left-radius:0}.modal-card.sc-ion-modal-ios-h{--backdrop-opacity:0;--width:100%;-ms-flex-align:end;align-items:flex-end}.modal-card.sc-ion-modal-ios-h .modal-shadow.sc-ion-modal-ios{display:none}.modal-card.sc-ion-modal-ios-h ion-backdrop.sc-ion-modal-ios{pointer-events:none}}@media screen and (min-width: 768px){.modal-card.sc-ion-modal-ios-h{--width:calc(100% - 120px);--height:calc(100% - (120px + var(--ion-safe-area-top) + var(--ion-safe-area-bottom)));--max-width:720px;--max-height:1000px}.modal-card.sc-ion-modal-ios-h{--backdrop-opacity:0;-webkit-transition:all 0.5s ease-in-out;transition:all 0.5s ease-in-out}.modal-card.sc-ion-modal-ios-h:first-of-type{--backdrop-opacity:0.18}.modal-card.sc-ion-modal-ios-h .modal-shadow.sc-ion-modal-ios{-webkit-box-shadow:0px 0px 30px 10px rgba(0, 0, 0, 0.1);box-shadow:0px 0px 30px 10px rgba(0, 0, 0, 0.1)}}\";\nconst modalMdCss = \".sc-ion-modal-md-h{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;contain:strict}.overlay-hidden.sc-ion-modal-md-h{display:none}.modal-wrapper.sc-ion-modal-md,.modal-shadow.sc-ion-modal-md{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow.sc-ion-modal-md{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){.sc-ion-modal-md-h{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){.sc-ion-modal-md-h{--width:600px;--height:600px}}.sc-ion-modal-md-h:first-of-type{--backdrop-opacity:var(--ion-backdrop-opacity, 0.32)}@media only screen and (min-width: 768px) and (min-height: 600px){.sc-ion-modal-md-h{--border-radius:2px}.sc-ion-modal-md-h:first-of-type{--box-shadow:0 28px 48px rgba(0, 0, 0, 0.4)}}.modal-wrapper.sc-ion-modal-md{-webkit-transform:translate3d(0,  40px,  0);transform:translate3d(0,  40px,  0);opacity:0.01}\";\nconst Modal = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.didPresent = createEvent(this, \"ionModalDidPresent\", 7);\n    this.willPresent = createEvent(this, \"ionModalWillPresent\", 7);\n    this.willDismiss = createEvent(this, \"ionModalWillDismiss\", 7);\n    this.didDismiss = createEvent(this, \"ionModalDidDismiss\", 7); // Whether or not modal is being dismissed via gesture\n\n    this.gestureAnimationDismissing = false;\n    this.presented = false;\n    /**\n     * If `true`, the keyboard will be automatically dismissed when the overlay is presented.\n     */\n\n    this.keyboardClose = true;\n    /**\n     * If `true`, the modal will be dismissed when the backdrop is clicked.\n     */\n\n    this.backdropDismiss = true;\n    /**\n     * If `true`, a backdrop will be displayed behind the modal.\n     */\n\n    this.showBackdrop = true;\n    /**\n     * If `true`, the modal will animate.\n     */\n\n    this.animated = true;\n    /**\n     * If `true`, the modal can be swiped to dismiss. Only applies in iOS mode.\n     */\n\n    this.swipeToClose = false;\n\n    this.onBackdropTap = () => {\n      this.dismiss(undefined, BACKDROP);\n    };\n\n    this.onDismiss = ev => {\n      ev.stopPropagation();\n      ev.preventDefault();\n      this.dismiss();\n    };\n\n    this.onLifecycle = modalEvent => {\n      const el = this.usersElement;\n      const name = LIFECYCLE_MAP[modalEvent.type];\n\n      if (el && name) {\n        const ev = new CustomEvent(name, {\n          bubbles: false,\n          cancelable: false,\n          detail: modalEvent.detail\n        });\n        el.dispatchEvent(ev);\n      }\n    };\n  }\n\n  swipeToCloseChanged(enable) {\n    if (this.gesture) {\n      this.gesture.enable(enable);\n    } else if (enable) {\n      this.initSwipeToClose();\n    }\n  }\n\n  connectedCallback() {\n    prepareOverlay(this.el);\n  }\n  /**\n   * Present the modal overlay after it has been created.\n   */\n\n\n  present() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.presented) {\n        return;\n      }\n\n      const container = _this.el.querySelector(`.modal-wrapper`);\n\n      if (!container) {\n        throw new Error('container is undefined');\n      }\n\n      const componentProps = Object.assign(Object.assign({}, _this.componentProps), {\n        modal: _this.el\n      });\n      _this.usersElement = yield attachComponent(_this.delegate, container, _this.component, ['ion-page'], componentProps);\n      yield deepReady(_this.usersElement);\n      writeTask(() => _this.el.classList.add('show-modal'));\n      yield present(_this, 'modalEnter', iosEnterAnimation, mdEnterAnimation, _this.presentingElement);\n\n      if (_this.swipeToClose) {\n        _this.initSwipeToClose();\n      }\n    })();\n  }\n\n  initSwipeToClose() {\n    var _this2 = this;\n\n    if (getIonMode(this) !== 'ios') {\n      return;\n    } // All of the elements needed for the swipe gesture\n    // should be in the DOM and referenced by now, except\n    // for the presenting el\n\n\n    const animationBuilder = this.leaveAnimation || config.get('modalLeave', iosLeaveAnimation);\n    const ani = this.animation = animationBuilder(this.el, this.presentingElement);\n    this.gesture = createSwipeToCloseGesture(this.el, ani, () => {\n      /**\n       * While the gesture animation is finishing\n       * it is possible for a user to tap the backdrop.\n       * This would result in the dismiss animation\n       * being played again. Typically this is avoided\n       * by setting `presented = false` on the overlay\n       * component; however, we cannot do that here as\n       * that would prevent the element from being\n       * removed from the DOM.\n       */\n      this.gestureAnimationDismissing = true;\n      this.animation.onFinish( /*#__PURE__*/_asyncToGenerator(function* () {\n        yield _this2.dismiss(undefined, 'gesture');\n        _this2.gestureAnimationDismissing = false;\n      }));\n    });\n    this.gesture.enable(true);\n  }\n  /**\n   * Dismiss the modal overlay after it has been presented.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the modal. For example, 'cancel' or 'backdrop'.\n   */\n\n\n  dismiss(data, role) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this3.gestureAnimationDismissing && role !== 'gesture') {\n        return false;\n      }\n\n      const enteringAnimation = activeAnimations.get(_this3) || [];\n      const dismissed = yield dismiss(_this3, data, role, 'modalLeave', iosLeaveAnimation, mdLeaveAnimation, _this3.presentingElement);\n\n      if (dismissed) {\n        yield detachComponent(_this3.delegate, _this3.usersElement);\n\n        if (_this3.animation) {\n          _this3.animation.destroy();\n        }\n\n        enteringAnimation.forEach(ani => ani.destroy());\n      }\n\n      _this3.animation = undefined;\n      return dismissed;\n    })();\n  }\n  /**\n   * Returns a promise that resolves when the modal did dismiss.\n   */\n\n\n  onDidDismiss() {\n    return eventMethod(this.el, 'ionModalDidDismiss');\n  }\n  /**\n   * Returns a promise that resolves when the modal will dismiss.\n   */\n\n\n  onWillDismiss() {\n    return eventMethod(this.el, 'ionModalWillDismiss');\n  }\n\n  render() {\n    const {\n      htmlAttributes\n    } = this;\n    const mode = getIonMode(this);\n    return h(Host, Object.assign({\n      \"no-router\": true,\n      \"aria-modal\": \"true\",\n      tabindex: \"-1\"\n    }, htmlAttributes, {\n      style: {\n        zIndex: `${20000 + this.overlayIndex}`\n      },\n      class: Object.assign({\n        [mode]: true,\n        [`modal-card`]: this.presentingElement !== undefined && mode === 'ios'\n      }, getClassMap(this.cssClass)),\n      onIonBackdropTap: this.onBackdropTap,\n      onIonDismiss: this.onDismiss,\n      onIonModalDidPresent: this.onLifecycle,\n      onIonModalWillPresent: this.onLifecycle,\n      onIonModalWillDismiss: this.onLifecycle,\n      onIonModalDidDismiss: this.onLifecycle\n    }), h(\"ion-backdrop\", {\n      visible: this.showBackdrop,\n      tappable: this.backdropDismiss\n    }), mode === 'ios' && h(\"div\", {\n      class: \"modal-shadow\"\n    }), h(\"div\", {\n      tabindex: \"0\"\n    }), h(\"div\", {\n      role: \"dialog\",\n      class: \"modal-wrapper ion-overlay-wrapper\"\n    }), h(\"div\", {\n      tabindex: \"0\"\n    }));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"swipeToClose\": [\"swipeToCloseChanged\"]\n    };\n  }\n\n};\nconst LIFECYCLE_MAP = {\n  'ionModalDidPresent': 'ionViewDidEnter',\n  'ionModalWillPresent': 'ionViewWillEnter',\n  'ionModalWillDismiss': 'ionViewWillLeave',\n  'ionModalDidDismiss': 'ionViewDidLeave'\n};\nModal.style = {\n  ios: modalIosCss,\n  md: modalMdCss\n};\nexport { Modal as ion_modal };","map":null,"metadata":{},"sourceType":"module"}