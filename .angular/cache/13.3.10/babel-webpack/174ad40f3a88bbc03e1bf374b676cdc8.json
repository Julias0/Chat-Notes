{"ast":null,"code":"import { messageListType } from '../enums/messageListTypes.enum';\nimport { map } from 'rxjs/internal/operators/map';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./messages.service\";\nexport let SearchService = /*#__PURE__*/(() => {\n  class SearchService {\n    constructor(messagesService) {\n      this.messagesService = messagesService;\n    }\n\n    searchByText(msgType, searchText) {\n      return this.messagesService.getMyMessages().pipe(map(messages => {\n        if (msgType === messageListType.normal) {\n          return messages.filter(message => !message.soft_deleted);\n        } else if (msgType === messageListType.deleted) {\n          return messages.filter(message => message.soft_deleted);\n        } else if (msgType === messageListType.favourites) {\n          return messages.filter(message => message.favourite);\n        } else {\n          return messages;\n        }\n      }), map(messages => {\n        if (searchText) {\n          return messages.filter(message => message.main_message.toLowerCase().includes(searchText.toLowerCase()));\n        }\n\n        return messages;\n      }));\n    }\n\n  }\n\n  SearchService.ɵfac = function SearchService_Factory(t) {\n    return new (t || SearchService)(i0.ɵɵinject(i1.MessagesService));\n  };\n\n  SearchService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SearchService,\n    factory: SearchService.ɵfac,\n    providedIn: 'root'\n  });\n  return SearchService;\n})();","map":null,"metadata":{},"sourceType":"module"}