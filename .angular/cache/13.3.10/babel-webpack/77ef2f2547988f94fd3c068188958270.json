{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport PocketBase from \"pocketbase\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nconst pb = new PocketBase(environment.API_URL);\nexport let PocketBaseService = /*#__PURE__*/(() => {\n  class PocketBaseService {\n    constructor() {\n      if (pb.authStore.model) {\n        this.authStateChanged$ = new BehaviorSubject(pb.authStore.model);\n      } else {\n        this.authStateChanged$ = new BehaviorSubject(null);\n      }\n    }\n\n    signUp(email, password) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const data = {\n          email,\n          emailVisibility: true,\n          password,\n          passwordConfirm: password\n        };\n        const record = yield pb.collection(\"users\").create(data);\n        return record;\n      });\n    }\n\n    signIn(email, password) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const authData = yield pb.collection(\"users\").authWithPassword(\"YOUR_USERNAME_OR_EMAIL\", \"YOUR_PASSWORD\");\n        return pb.authStore.isValid;\n      });\n    }\n\n  }\n\n  PocketBaseService.ɵfac = function PocketBaseService_Factory(t) {\n    return new (t || PocketBaseService)();\n  };\n\n  PocketBaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PocketBaseService,\n    factory: PocketBaseService.ɵfac,\n    providedIn: \"root\"\n  });\n  return PocketBaseService;\n})();","map":null,"metadata":{},"sourceType":"module"}